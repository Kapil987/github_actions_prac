name: Github ARC scaling demo

on:
  workflow_dispatch:

jobs:
  setup-env-and-test:
    runs-on: gha-runner-scale-set
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        working-directory: ./2.python-flask-app  # Replace with your actual path
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Replace with your actual path

      - name: Run tests
        working-directory: ./2.python-flask-app # Replace with your actual path
        run: pytest # runs file which start with test_

  build-and-publish:
    needs: setup-env-and-test
    runs-on: gha-runner-scale-set
    services:
      docker:
        image: docker:dind
        options: --privileged --shm-size=2g
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
    container:
      image: ubuntu:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Docker
        run: |
          apt-get update
          apt-get install -y docker.io
      
      - name: Test Docker
        run: |
          docker version
          docker info
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }} # Replace with your Docker Hub username in vars
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Replace with your Docker Hub token in secrets

      - name: Build and push
        id: build-and-publish
        uses: docker/build-push-action@v6
        with:
          context: ./2.python-flask-app
          file: ./2.python-flask-app/Dockerfile
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/flask-you-may-delete-app:latest
      
      # ref https://github.com/docker/build-push-action
      - name: Image digest
        run: echo ${{ steps.build-and-publish.outputs.digest}}

  parallel-python-job:
    runs-on: gha-runner-scale-set
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Run Python --version
        run: python --version

      - name: Sleep for 10 seconds
        run: sleep 10

      - name: Task Completed Message
        run: echo "Task completed successfully!"
